import React from 'react';
import ReactDOM from 'react-dom';
import PropTypes from 'prop-types';
import Core from 'core.json';
import Electives from '../sampleData/electives.json';

const Courses = {
    core: Core,
    electives: Electives,
};

function apiClient(department: any) {
    return {
      then: function (cb: any) {
        setTimeout(() => { cb(Courses[department]); }, 1000);
      },
    };
}

export default class CourseSelect extends React.Component<ICourseSelectProps, ICourseSelectState> {
    state = {
        department: null,
        course: null,
        courses: [],
        _loading: false
    }

    componentWillReceiveProps(update: any) {
        this.setState({
            department: update.department,
            course: update.course
        });
    }

    fetch = (department) => {
        this.setState({_loading :true, courses: []});
        // async call
        apiClient(department).then((courses) => {
            this.setState({_loading: false, courses: courses});
        });
    }

    onSelectDepartment = (evt: any) => {
        const department = evt.target.value;
        const course = null;
        this.setState({department, course});
        this.props.onChange({name: 'department', value: department});
        this.props.onChange({name: 'course', value: course});

        if (department)
            this.fetch(department);
    }

    onSelectCourse = (evt: any) => {
        const course = evt.target.value;
        this.setState({course});
        this.props.onChange({name: 'course', value: course});
    }

    renderDepartmentSelect = () => {
        return (
            <select
                onChange={this.onSelectDepartment}
                value={this.state.department || ''}
            >
                <option value=''>
                    Which department?
                </option>
                <option value='core'>
                    NodeSchool: Core
                </option>
                <option value='electives'>
                    NodeSchool: Electives
                </option>
            </select>
        );
    };

    renderCourseSelect = () => {
        if (this.state._loading) {
          return <img alt='loading' src='/img/loading.gif' />;
        }
        if (!this.state.department || !this.state.courses.length) return <span />;

        return (
            <select
                onChange={this.onSelectCourse}
                value={this.state.course || ''}
            >
                {[
                    <option value='' key='course-none'>
                        Which course?
                    </option>,

                    ...this.state.courses.map((course, i) => (
                    <option value={course} key={i}>
                        {course}
                    </option>
                    ))
                ]}
            </select>
        );
    };

    render() {
        return (
            <div>
                {this.renderDepartmentSelect()}
                <br/>
                {this.renderCourseSelect()}
            </div>
        );
    }
}
